---
import type { CollectionEntry } from 'astro:content'
import { Image } from 'astro:assets'
import FormattedDate from '../FormattedDate.astro'

interface Props {
  content: CollectionEntry<'post'>
}

const {
  content: { slug, data, render }
} = Astro.props

const { remarkPluginFrontmatter } = await render()

const dateTimeOptions: Intl.DateTimeFormatOptions = {
  month: 'short'
}
---

{
  data.coverImage && (
    <div class='prose mb-6'>
      <Image
        alt={data.coverImage.alt}
        class='h-auto w-full rounded-2xl object-contain'
        fetchpriority='high'
        loading='eager'
        src={data.coverImage.src}
      />
    </div>
  )
}
{data.draft ? <span class='text-red-500'>(Draft)</span> : null}
<div class='flex flex-col gap-2 text-xs leading-6 text-muted-foreground sm:flex-row'>
  <div class='flex items-center gap-1'>
    <svg class='size-5'>
      <use href='/src/assets/icons/ui.svg#mingcute-calendar-2-line'></use>
    </svg>
    <FormattedDate date={data.publishDate} dateTimeOptions={dateTimeOptions} />
    {
      data.updatedDate && (
        <div class='flex items-center gap-1'>
          <span> / </span>
          <span>
            Updated:
            <FormattedDate date={data.updatedDate} dateTimeOptions={dateTimeOptions} />
          </span>
        </div>
      )
    }
  </div>
  <div class='flex items-center gap-1'>
    <svg class='size-5'>
      <use href='/src/assets/icons/ui.svg#mingcute-time-line'></use>
    </svg>
    {remarkPluginFrontmatter.minutesRead}
  </div>
</div>
<h1 class='mt-2 text-3xl font-medium sm:mb-1'>
  {data.title}
</h1>

{
  !!data.tags?.length && (
    <div class='mt-3 flex flex-row items-center gap-x-1'>
      <svg class='size-5'>
        <use href='/src/assets/icons/ui.svg#mingcute-tag-line' />
      </svg>
      {data.tags.map((tag: string, i: number) => (
        <div>
          <a
            aria-label={`View more blogs with the tag ${tag}`}
            class="inline-block before:content-['#'] hover:underline hover:underline-offset-4"
            data-pagefind-filter='tag'
            href={`/tags/${tag}/`}
          >
            {tag}
          </a>
          {i < data.tags.length - 1 && ', '}
        </div>
      ))}
    </div>
  )
}

{
  !data.draft && (
    <div id='article-info' class='mt-6 text-base text-sm text-muted-foreground'>
      <span class='waline-pageview-count' data-path={`/blog/${slug}`}>
        ???
      </span>{' '}
      views |
      <span class='waline-comment-count' data-path={`/blog/${slug}`}>
        ???
      </span>{' '}
      comments
    </div>
  )
}
