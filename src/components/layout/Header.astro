---
const ITEMS = [
  {
    link: '/blog',
    label: 'Blog'
  },
  {
    link: '/projects',
    label: 'Projects'
  },
  {
    link: '/links',
    label: 'Links'
  },
  {
    link: '/about',
    label: 'About'
  }
]
---

<header-component class='group w-full'>
  <header class='mb-12 flex flex-wrap pb-3 text-sm sm:flex-nowrap sm:justify-start'>
    <nav
      class='relative mx-auto flex w-full items-center justify-between sm:flex sm:items-center'
      aria-label='global'
    >
      <a class='flex-none text-xl font-semibold' href='/' aria-label='Brand'>CWorld Site</a>

      <div class='flex gap-x-4 sm:gap-x-7'>
        <div
          id='headerExpandConetent'
          class='absolute left-0 right-0 top-14 z-10 grid opacity-0 transition-all duration-300 group-[.expanded]:bg-background group-[.expanded]:pb-10 group-[.expanded]:opacity-100 sm:static sm:grid-rows-1 sm:bg-inherit sm:opacity-100 sm:group-[.expanded]:pb-0'
        >
          <div
            class='flex flex-col items-center justify-center gap-5 overflow-hidden transition-colors sm:flex-row sm:gap-x-7'
          >
            {
              ITEMS.map((item) => (
                <a
                  href={item.link}
                  class='w-full flex-none grow text-right text-[1.05rem] font-medium hover:text-primary sm:w-fit'
                  aria-label='Nav Menu Item'
                >
                  {item.label}
                </a>
              ))
            }
          </div>
        </div>

        <button
          id='toggleDarkMode'
          class='relative rounded-md border border-border p-1.5 transition-all hover:bg-border'
        >
          <span class='sr-only'>Dark Theme</span>
          <svg class='size-5 transition-all dark:hidden'>
            <use href='/src/assets/icons/header.svg#mingcute-sun-line'></use>
          </svg>
          <svg class='hidden size-5 transition-all dark:block'>
            <use href='/src/assets/icons/header.svg#mingcute-moon-stars-line'></use>
          </svg>
        </button>
        <button
          id='toggleMenu'
          class='relative rounded-md border border-border p-1.5 transition-all hover:bg-border sm:hidden'
        >
          <span class='sr-only'>Menu</span>
          <svg
            xmlns='http://www.w3.org/2000/svg'
            width='16'
            height='16'
            class='size-5'
            viewBox='0 0 24 24'
            ><g fill='none'
              ><path
                d='M24 0v24H0V0zM12.593 23.258l-.011.002l-.071.035l-.02.004l-.014-.004l-.071-.035c-.01-.004-.019-.001-.024.005l-.004.01l-.017.428l.005.02l.01.013l.104.074l.015.004l.012-.004l.104-.074l.012-.016l.004-.017l-.017-.427c-.002-.01-.009-.017-.017-.018m.265-.113l-.013.002l-.185.093l-.01.01l-.003.011l.018.43l.005.012l.008.007l.201.093c.012.004.023 0 .029-.008l.004-.014l-.034-.614c-.003-.012-.01-.02-.02-.022m-.715.002a.023.023 0 0 0-.027.006l-.006.014l-.034.614c0 .012.007.02.017.024l.015-.002l.201-.093l.01-.008l.004-.011l.017-.43l-.003-.012l-.01-.01z'
              ></path><path
                fill='currentColor'
                d='M20 18a1 1 0 0 1 .117 1.993L20 20H4a1 1 0 0 1-.117-1.993L4 18zm0-7a1 1 0 1 1 0 2H4a1 1 0 1 1 0-2zm0-7a1 1 0 1 1 0 2H4a1 1 0 0 1 0-2z'
              ></path></g
            ></svg
          >
        </button>
      </div>
    </nav>
  </header>
</header-component>

<script>
  class Header extends HTMLElement {
    constructor() {
      super()
    }

    connectedCallback() {
      // Dark Mode
      function getCurrentTheme() {
        return localStorage.getItem('theme')
      }
      const toggleDarkModeButton = this.querySelector('#toggleDarkMode')
      toggleDarkModeButton?.addEventListener('click', () => {
        const toggleDarkModeEvent = new CustomEvent('theme-change', {
          detail: { theme: getCurrentTheme() === 'light' ? 'dark' : 'light' }
        })
        document.dispatchEvent(toggleDarkModeEvent)
      })

      // Menu
      var style = document.createElement('style')
      style.innerHTML =
        '@media(max-width:640px){#headerExpandConetent{grid-template-rows:0fr}.expanded #headerExpandConetent{grid-template-rows:1fr}}'
      this.appendChild(style)
      const toggleMenuButton = this.querySelector('#toggleMenu')
      toggleMenuButton?.addEventListener('click', () => {
        if (this.classList.contains('expanded')) {
          this.classList.remove('expanded')
        } else {
          this.classList.add('expanded')
        }
      })
    }
  }
  customElements.define('header-component', Header)
</script>
